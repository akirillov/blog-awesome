- name: Check Couchbase Installed
  shell: dpkg -l | grep -cim1 couchbase-server
  register: couchbaseInstalled
  ignore_errors: True

- name: download Couchbase package
  get_url: url=http://packages.couchbase.com/releases/2.2.0/couchbase-server-community_2.2.0_x86_64_openssl098.deb dest=~/.
  when: couchbaseInstalled.stdout == '0'

- name: Install Couchbase .deb file on all machines
  shell: dpkg -i ~/couchbase-server-community_2.2.0_x86_64_openssl098.deb
  when: couchbaseInstalled.stdout == '0'

- name: Configure main node
  shell: /opt/couchbase/bin/couchbase-cli cluster-init -c 127.0.0.1:8091  --cluster-init-username={{ admin_user }} --cluster-init-password={{ admin_password }} --cluster-init-port=8091 --cluster-init-ramsize={{ cluster_ram_quota }}
  when: couchbaseInstalled.stdout == '0'

- name: Create shell script for configuring main node
  template: src=couchbase-add-node.j2 dest=/tmp/addnodes.sh mode=750
  when: couchbaseInstalled.stdout == '0'

- name: Launch config script
  action: shell /tmp/addnodes.sh
  when: couchbaseInstalled.stdout == '0'

- name: Rebalance the cluster
  shell: /opt/couchbase/bin/couchbase-cli rebalance -c 127.0.0.1:8091 -u {{ admin_user }} -p {{ admin_password }}
  when: couchbaseInstalled.stdout == '0'

- name: Reading buckets configuration
  debug: msg="Bucket {{ item.key }} [ name = {{ item.value.name }}, ram_quota = {{ item.value.ram_quota }}, replica_number = {{ item.value.replica_number }}, enable_flush = {{ item.value.enable_flush }} ] found in configuration"
  with_dict: buckets
  when: couchbaseInstalled.stdout == '0'

- name: Creating Buckets
  shell: /opt/couchbase/bin/couchbase-cli bucket-create -c 127.0.0.1:8091 --bucket={{ item.value.name }} --bucket-type=couchbase --bucket-port=11211 --bucket-ramsize={{ item.value.ram_quota }}  --bucket-replica={{ item.value.replica_number }} -u {{ admin_user }} -p {{ admin_password }} --enable-flush={{ item.value.enable_flush }}
  with_dict: buckets
  when: couchbaseInstalled.stdout == '0'

- name: Copying Views
  copy: src={{ item }} dest=/tmp/couchbase/views/
  with_fileglob:
        - views/*.json
#  when: couchbaseInstalled.stdout == '0'


- name: Uploading views
  shell: "curl -X PUT -H 'Content-Type: application/json' http://{{ admin_user }}:{{ admin_password }}@localhost:8092/{{ item.1 }}/_design/{{ item.0.docname }} -d @/tmp/couchbase/views/{{ item.0.file }}"
  with_subelements:
       - design_docs
       - buckets
#  when: couchbaseInstalled.stdout == '0'